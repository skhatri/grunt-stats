/*
 * grunt-stats
 * http://github.com/t32k/grunt-stats
 * http://en.t32k.me
 *
 * Copyright (c) 2013 Koji Ishimoto
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function (grunt) {
	var fs = require('fs');
	var path = require('path');
	var bytes = require('bytes');
	var moment = require('moment');

var childProcess = require('child_process');
var phantomjs = require('phantomjs');
var binPath = phantomjs.path;

var childArgs = [
  path.join(__dirname, 'phantomjs-script.js'),
  'some other argument (passed to phantomjs script)'
];


	//var stat = fs.statSync('hoge.js');

	//console.log('Size: ' + stat.size);
	//console.log('Time: ' + stat.mtime);
//
	//var hoge = moment(stat.mtime).format('dddd');
	//console.log(hoge);
	//console.log(bytes(stat.size));

	grunt.registerMultiTask('stats', 'Statics of Static files', function() {

		grunt.log.ok('ここまできている1')

		//var stat = fs.statSync(this.filesSrc);
		//grunt.log.write(stat);
		// Lint specified files.
		var files = this.filesSrc;
		var errorCount = 0;

		// Fail task if errors were logged.
		if (errorCount > 0) { return false; }

		// Otherwise, print a success message.

		var hoge = this.filesSrc + "";
		var stat = fs.statSync(hoge);
		grunt.log.ok(bytes(stat.size));

		var fooga = moment(stat.mtime).format('h:mm:ss');
		grunt.log.ok(fooga);

childProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {
  // handle results
grunt.log.ok(stdout);
  grunt.log.ok('aaaa');
  
})


	});

	var measureSize;
};